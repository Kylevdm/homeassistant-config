- id: '1701901878676'
  alias: Solcast - API Poll Schedule
  description: New API call Solcast
  trigger:
  - platform: time
    at: 06:00:00
  - platform: time
    at: '10:00:00'
  - platform: time
    at: '14:00:00'
  - platform: time
    at: '18:00:00'
  - platform: time
    at: '23:00:00'
  condition: []
  action:
  - service: solcast_solar.update_forecasts
    data: {}
  mode: single
- id: '1760173080569'
  alias: Battery Status Indicator
  description: ''
  triggers:
  - entity_id: sensor.solisac_battery_soc
    trigger: state
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solisac_battery_soc
        above: 79.9
      sequence:
      - target:
          entity_id: light.battery_sensor
        data:
          rgb_color:
          - 0
          - 255
          - 0
          brightness_pct: 100
        action: light.turn_on
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solisac_battery_soc
        above: 59.9
        below: 80
      sequence:
      - target:
          entity_id: light.battery_sensor
        data:
          rgb_color:
          - 255
          - 255
          - 0
          brightness_pct: 100
        action: light.turn_on
    - conditions:
      - condition: numeric_state
        entity_id: sensor.solisac_battery_soc
        above: 39.9
        below: 60
      sequence:
      - target:
          entity_id: light.battery_sensor
        data:
          rgb_color:
          - 255
          - 128
          - 0
          brightness_pct: 100
        action: light.turn_on
    default:
    - target:
        entity_id: light.battery_sensor
      data:
        rgb_color:
        - 255
        - 0
        - 0
        brightness_pct: 100
      action: light.turn_on
  mode: restart
  
  
# ========================================
# PHASE 1: SOLIS-ONLY AUTOMATIONS
# Install these NOW while waiting for ESP hardware
# ========================================

# 1. START CHARGING
- id: 'solis_charging_start_phase1'
alias: "Solis Charging - Start (Phase 1)"
description: "Starts Solis charging when cheap rate begins"
triggers:
  - platform: state
    entity_id: binary_sensor.cheap_rate_active
    to: 'on'
conditions:
  - condition: numeric_state
    entity_id: sensor.solisac_battery_soc
    below: 95
actions:
  # Set Solis mode to Self-Use
  - service: select.select_option
    target:
      entity_id: select.solisac_energy_storage_control_switch
    data:
      option: "Self-Use"
  
  # Set bulk charging current
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_current
    data:
      value: 62.5
  
  # Set charge time slot
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_start_hours
    data:
      value: "{{ now().hour }}"
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_start_minutes
    data:
      value: "{{ now().minute }}"
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_end_hours
    data:
      value: 5
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_end_minutes
    data:
      value: 30
  
  # Press update button
  - service: button.press
    target:
      entity_id: button.solisac_update_charge_discharge_times

# 2. PHASE TRANSITIONS
- id: 'solis_phase_transition_phase1'
alias: "Solis Charging - Phase Transitions (Phase 1)"
description: "Changes Solis current when crossing SOC thresholds"
triggers:
  # Entering absorption phase (90% SOC)
  - platform: numeric_state
    entity_id: sensor.solisac_battery_soc
    above: 89.5
    below: 90.5
    id: enter_absorption
  
  # Entering top balance phase (95% SOC)
  - platform: numeric_state
    entity_id: sensor.solisac_battery_soc
    above: 94.5
    below: 95.5
    id: enter_top_balance
conditions:
  - condition: state
    entity_id: binary_sensor.cheap_rate_active
    state: 'on'
actions:
  - choose:
      # ABSORPTION PHASE (90-95%)
      - conditions:
          - condition: trigger
            id: enter_absorption
        sequence:
          - service: number.set_value
            target:
              entity_id: number.solisac_timed_charge_current
            data:
              value: 31
          
          - service: button.press
            target:
              entity_id: button.solisac_update_charge_discharge_times
      
      # TOP BALANCE PHASE (95-100%)
      - conditions:
          - condition: trigger
            id: enter_top_balance
        sequence:
          # Continue at reduced rate for top balance
          - service: number.set_value
            target:
              entity_id: number.solisac_timed_charge_current
            data:
              value: 15
          
          - service: button.press
            target:
              entity_id: button.solisac_update_charge_discharge_times

# 3. STOP CHARGING
- id: 'solis_charging_stop_phase1'
alias: "Solis Charging - Stop (Phase 1)"
description: "Stops charging when cheap rate ends or battery full"
triggers:
  - platform: state
    entity_id: binary_sensor.cheap_rate_active
    to: 'off'
    id: slot_ended
  
  - platform: numeric_state
    entity_id: sensor.solisac_battery_soc
    above: 99.5
    id: battery_full
  
  - platform: time
    at: "05:15:00"
    id: rest_period
actions:
  # Disable timed charging (set to 00:00-00:00)
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_start_hours
    data:
      value: 0
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_start_minutes
    data:
      value: 0
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_end_hours
    data:
      value: 0
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_end_minutes
    data:
      value: 0
  
  - service: button.press
    target:
      entity_id: button.solisac_update_charge_discharge_times

# 4. LOW BATTERY ALERT
- id: 'battery_low_alert_phase1'
alias: "Battery - Low SOC Alert (Phase 1)"
description: "Notifies when battery reaches 40%"
triggers:
  - platform: numeric_state
    entity_id: sensor.solisac_battery_soc
    below: 40
conditions:
  - condition: state
    entity_id: binary_sensor.cheap_rate_active
    state: 'off'
actions:
  - service: notify.mobile_app_iphone_14
    data:
      title: "üîã Battery Low"
      message: "Home battery is at {{ states('sensor.solisac_battery_soc') }}%. Next cheap rate at 23:30."
      data:
        push:
          sound: default
          interruption-level: time-sensitive

# 5. INTELLIGENT DISPATCHING
- id: 'intelligent_dispatching_phase1'
alias: "Solis Charging - Intelligent Dispatching (Phase 1)"
description: "Updates charge times for Octopus Intelligent slots"
triggers:
  - platform: state
    entity_id: binary_sensor.octopus_energy_a_cadd52b1_intelligent_dispatching
    to: 'on'
conditions:
  - condition: numeric_state
    entity_id: sensor.solisac_battery_soc
    below: 95
actions:
  # Set current time as start
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_start_hours
    data:
      value: "{{ now().hour }}"
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_start_minutes
    data:
      value: "{{ now().minute }}"
  
  # Intelligent slots typically 1-2 hours
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_end_hours
    data:
      value: "{{ (now().hour + 2) % 24 }}"
  
  - service: number.set_value
    target:
      entity_id: number.solisac_timed_charge_end_minutes
    data:
      value: "{{ now().minute }}"
  
  - service: button.press
    target:
      entity_id: button.solisac_update_charge_discharge_times

# 6. GRID OVERLOAD PROTECTION
- id: 'grid_overload_protection_phase1'
alias: "Grid - Overload Protection (Phase 1)"
description: "Alerts if grid import exceeds safe limits"
triggers:
  - platform: numeric_state
    entity_id: sensor.myenergi_69_stirtingale_road_eddi_power_grid
    above: 18000
    for:
      seconds: 10
conditions:
  - condition: state
    entity_id: binary_sensor.cheap_rate_active
    state: 'on'
actions:
  # Send warning (can't reduce Solis dynamically in Phase 1)
  - service: notify.mobile_app_iphone_14
    data:
      title: "‚ö†Ô∏è Grid Overload Warning"
      message: "Grid import at {{ states('sensor.myenergi_69_stirtingale_road_eddi_power_grid') }}W. Check loads!"
      data:
        push:
          sound: default
              interruption-level: critical